	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?
	Asinxron proqramlaşdırma imkan verirki birdən artıq işi eyni zamanda görək. Bunu çox vaxt multiThreading ilə qarışdırırlar amma multiThreadingdə iş başına bir Thread yaradılsa da asinxron proqramlaşdırmada ola bilsinki 10 iş üçün 3-5 arası Thread ayrılsın. Yəni threadlərin yaradılma prosesinə xeyli qənaət edirik. Bir çox asinxron mexanizmlər arxa planda ümümiyyətlə Thread istifadə etmədən işi yekunlaşdıra bilirlər.
Asinxron Programlaşdırma modeli (bundan sonra APM) Microsoft-un təqdim etdiyi ilk asinxron proqramlaşdırma variantlarından biridir. Bunun hesabına arxa planda Thread yaradılma prosesinə qənaət etmək olur. MultiThread proqramlaşdırma istifadə edərkən hər metod başına ayrı Thread yaradırdıq. Bu o deməkdir ki, 10 metodumuz varsa deməli 10 Thread yaratmalı idi. Düzdür, ThreadPool ortaya çıxdıqdan sonra situasiya xeyli dərəcədə dəyişdi, artıq Thread yaradılması prosesi CLR-in öhdəsinə verildi.  Asinxron proqramlaşdırma modelimiz də arxa planda ThreadPool-u istifadə edən metodlar toplusudur.
	APM metodları BeginXXX() ilə başlayır, EndXXX() ilə bitir. Bu o deməkdir ki, əgər metod Begin ilə başlayırsa onu sinxron vəziyyətə keçirib cavabı almaq üçün yekunda EndXXX metodunu çağırırıq.
	Hazırda APM köhnəlmiş APİ sayılsa da sonrakı dərslərdə izah edəcəyimiz bir sır yeni Asinxron proqram yazma texnikaları yekun etibarilə APM-in işləmə prinsipi ilə demək olar ki eynidir. Ona görə APM-i başa düşmək mütləqdir.  .NET-də yazılmş köhnə proqramları support edərkən APM çox işinizə yarayacaq.
	Asinxron proqramlaşdırma nədir?